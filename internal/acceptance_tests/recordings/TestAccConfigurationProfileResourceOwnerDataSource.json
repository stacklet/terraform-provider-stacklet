{
  "mutation ($input:ResourceOwnerConfigurationInput!){addResourceOwnerProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}:{\"input\":{\"default\":[\"owner1@example.com\",\"owner2@example.com\"],\"name\":\"resource_owner\",\"orgDomain\":\"example.com\",\"orgDomainTag\":null,\"scope\":\"0\",\"tags\":[\"owner\",\"team\"]}}": [
    {
      "request": {
        "query": "mutation ($input:ResourceOwnerConfigurationInput!){addResourceOwnerProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}",
        "variables": {
          "input": {
            "default": [
              "owner1@example.com",
              "owner2@example.com"
            ],
            "name": "resource_owner",
            "orgDomain": "example.com",
            "orgDomainTag": null,
            "scope": "0",
            "tags": [
              "owner",
              "team"
            ]
          }
        }
      },
      "response": {
        "data": {
          "addResourceOwnerProfile": {
            "configuration": {
              "id": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ==",
              "profile": "resource_owner",
              "record": {
                "__typename": "ResourceOwnerConfiguration",
                "orgDomain": "example.com",
                "orgDomainTag": null,
                "resourceOwnerDefault": [
                  "owner1@example.com",
                  "owner2@example.com"
                ],
                "tags": [
                  "owner",
                  "team"
                ]
              }
            }
          }
        }
      }
    }
  ],
  "mutation ($name:String!$scope:String!){removeProfile(scope: $scope, name: $name)}:{\"name\":\"resource_owner\",\"scope\":\"0\"}": [
    {
      "request": {
        "query": "mutation ($name:String!$scope:String!){removeProfile(scope: $scope, name: $name)}",
        "variables": {
          "name": "resource_owner",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "removeProfile": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ=="
        }
      }
    }
  ],
  "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}:{\"name\":\"resource_owner\",\"scope\":\"0\"}": [
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "resource_owner",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ==",
            "profile": "resource_owner",
            "record": {
              "__typename": "ResourceOwnerConfiguration",
              "orgDomain": "example.com",
              "orgDomainTag": null,
              "resourceOwnerDefault": [
                "owner1@example.com",
                "owner2@example.com"
              ],
              "tags": [
                "owner",
                "team"
              ]
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "resource_owner",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ==",
            "profile": "resource_owner",
            "record": {
              "__typename": "ResourceOwnerConfiguration",
              "orgDomain": "example.com",
              "orgDomainTag": null,
              "resourceOwnerDefault": [
                "owner1@example.com",
                "owner2@example.com"
              ],
              "tags": [
                "owner",
                "team"
              ]
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "resource_owner",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ==",
            "profile": "resource_owner",
            "record": {
              "__typename": "ResourceOwnerConfiguration",
              "orgDomain": "example.com",
              "orgDomainTag": null,
              "resourceOwnerDefault": [
                "owner1@example.com",
                "owner2@example.com"
              ],
              "tags": [
                "owner",
                "team"
              ]
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username,password}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "resource_owner",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAicmVzb3VyY2Vfb3duZXIiXQ==",
            "profile": "resource_owner",
            "record": {
              "__typename": "ResourceOwnerConfiguration",
              "orgDomain": "example.com",
              "orgDomainTag": null,
              "resourceOwnerDefault": [
                "owner1@example.com",
                "owner2@example.com"
              ],
              "tags": [
                "owner",
                "team"
              ]
            }
          }
        }
      }
    }
  ]
}