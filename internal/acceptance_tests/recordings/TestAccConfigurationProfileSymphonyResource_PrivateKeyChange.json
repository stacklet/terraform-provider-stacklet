{
  "mutation ($input:SymphonyConfigurationInput!){addSymphonyProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}:{\"input\":{\"agentDomain\":\"example.symphony.com\",\"name\":\"symphony\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7\\n-----END PRIVATE KEY-----\",\"scope\":\"0\",\"serviceAccount\":\"test-service-account\"}}": [
    {
      "request": {
        "query": "mutation ($input:SymphonyConfigurationInput!){addSymphonyProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}",
        "variables": {
          "input": {
            "agentDomain": "example.symphony.com",
            "name": "symphony",
            "privateKey": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC7\n-----END PRIVATE KEY-----",
            "scope": "0",
            "serviceAccount": "test-service-account"
          }
        }
      },
      "response": {
        "data": {
          "addSymphonyProfile": {
            "configuration": {
              "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
              "profile": "symphony",
              "record": {
                "__typename": "SymphonyConfiguration",
                "agentDomain": "example.symphony.com",
                "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQE/ooEgen2NtEa09SFPQBxfAAAAzTCBygYJKoZIhvcNAQcGoIG8MIG5AgEAMIGzBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHtFd02CNbo9JLWvNAIBEICBha+SNDJnOd8lB+EqLFPlH47nApFgu3tt9xoKMWGhw5Rkb6rgz1NDvKJdbmbB9r/FxVZH2uY7Xg4o9t2G00oWuYtugXaoUxU50i551Ba0ep+p1KvBhEO2kTt2uqxKhAI7KpxM1C8HPLEYpAZtGTwRhocJIsA3bA6n03ohhIadCrYhW41K12c=",
                "serviceAccount": "test-service-account"
              }
            }
          }
        }
      }
    }
  ],
  "mutation ($input:SymphonyConfigurationInput!){addSymphonyProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}:{\"input\":{\"agentDomain\":\"example.symphony.com\",\"name\":\"symphony\",\"privateKey\":\"-----BEGIN PRIVATE KEY-----\\nNEW_KEY_CONTENT_HERE\\n-----END PRIVATE KEY-----\",\"scope\":\"0\",\"serviceAccount\":\"test-service-account\"}}": [
    {
      "request": {
        "query": "mutation ($input:SymphonyConfigurationInput!){addSymphonyProfile(input: $input){configuration{id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}}",
        "variables": {
          "input": {
            "agentDomain": "example.symphony.com",
            "name": "symphony",
            "privateKey": "-----BEGIN PRIVATE KEY-----\nNEW_KEY_CONTENT_HERE\n-----END PRIVATE KEY-----",
            "scope": "0",
            "serviceAccount": "test-service-account"
          }
        }
      },
      "response": {
        "data": {
          "addSymphonyProfile": {
            "configuration": {
              "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
              "profile": "symphony",
              "record": {
                "__typename": "SymphonyConfiguration",
                "agentDomain": "example.symphony.com",
                "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQEXFWC9nj3XzzXnfroeiF6mAAAArDCBqQYJKoZIhvcNAQcGoIGbMIGYAgEAMIGSBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDMfZLB8Kfj00N34XsQIBEIBlXxLAZc4bDpXk7ydVP/umFsXHRAPbTzsVkb1r28o7Om/rYWwBUPYEdh4XGuc1km705siLIoRqXztREPvXCjVQD88DYK7L6xpO3g6qjxU+tui94uiv3M37Z6AaK+Z6VIQBCxn2TLw=",
                "serviceAccount": "test-service-account"
              }
            }
          }
        }
      }
    }
  ],
  "mutation ($name:String!$scope:String!){removeProfile(scope: $scope, name: $name)}:{\"name\":\"symphony\",\"scope\":\"0\"}": [
    {
      "request": {
        "query": "mutation ($name:String!$scope:String!){removeProfile(scope: $scope, name: $name)}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "removeProfile": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ=="
        }
      }
    }
  ],
  "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}:{\"name\":\"symphony\",\"scope\":\"0\"}": [
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
            "profile": "symphony",
            "record": {
              "__typename": "SymphonyConfiguration",
              "agentDomain": "example.symphony.com",
              "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQE/ooEgen2NtEa09SFPQBxfAAAAzTCBygYJKoZIhvcNAQcGoIG8MIG5AgEAMIGzBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHtFd02CNbo9JLWvNAIBEICBha+SNDJnOd8lB+EqLFPlH47nApFgu3tt9xoKMWGhw5Rkb6rgz1NDvKJdbmbB9r/FxVZH2uY7Xg4o9t2G00oWuYtugXaoUxU50i551Ba0ep+p1KvBhEO2kTt2uqxKhAI7KpxM1C8HPLEYpAZtGTwRhocJIsA3bA6n03ohhIadCrYhW41K12c=",
              "serviceAccount": "test-service-account"
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
            "profile": "symphony",
            "record": {
              "__typename": "SymphonyConfiguration",
              "agentDomain": "example.symphony.com",
              "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQE/ooEgen2NtEa09SFPQBxfAAAAzTCBygYJKoZIhvcNAQcGoIG8MIG5AgEAMIGzBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHtFd02CNbo9JLWvNAIBEICBha+SNDJnOd8lB+EqLFPlH47nApFgu3tt9xoKMWGhw5Rkb6rgz1NDvKJdbmbB9r/FxVZH2uY7Xg4o9t2G00oWuYtugXaoUxU50i551Ba0ep+p1KvBhEO2kTt2uqxKhAI7KpxM1C8HPLEYpAZtGTwRhocJIsA3bA6n03ohhIadCrYhW41K12c=",
              "serviceAccount": "test-service-account"
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
            "profile": "symphony",
            "record": {
              "__typename": "SymphonyConfiguration",
              "agentDomain": "example.symphony.com",
              "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQE/ooEgen2NtEa09SFPQBxfAAAAzTCBygYJKoZIhvcNAQcGoIG8MIG5AgEAMIGzBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHtFd02CNbo9JLWvNAIBEICBha+SNDJnOd8lB+EqLFPlH47nApFgu3tt9xoKMWGhw5Rkb6rgz1NDvKJdbmbB9r/FxVZH2uY7Xg4o9t2G00oWuYtugXaoUxU50i551Ba0ep+p1KvBhEO2kTt2uqxKhAI7KpxM1C8HPLEYpAZtGTwRhocJIsA3bA6n03ohhIadCrYhW41K12c=",
              "serviceAccount": "test-service-account"
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
            "profile": "symphony",
            "record": {
              "__typename": "SymphonyConfiguration",
              "agentDomain": "example.symphony.com",
              "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQE/ooEgen2NtEa09SFPQBxfAAAAzTCBygYJKoZIhvcNAQcGoIG8MIG5AgEAMIGzBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDHtFd02CNbo9JLWvNAIBEICBha+SNDJnOd8lB+EqLFPlH47nApFgu3tt9xoKMWGhw5Rkb6rgz1NDvKJdbmbB9r/FxVZH2uY7Xg4o9t2G00oWuYtugXaoUxU50i551Ba0ep+p1KvBhEO2kTt2uqxKhAI7KpxM1C8HPLEYpAZtGTwRhocJIsA3bA6n03ohhIadCrYhW41K12c=",
              "serviceAccount": "test-service-account"
            }
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!$scope:String!){profile(name: $name, scope: $scope){id,profile,record{__typename,... on EmailConfiguration{fromEmail,sesRegion,smtp{server,port,ssl,username}},... on ServiceNowConfiguration{endpoint,user,password,issueType,closedState},... on SlackConfiguration{token,userFields,webhooks{name,url}},... on SymphonyConfiguration{agentDomain,serviceAccount,privateKey},... on TeamsConfiguration{webhooks{name,url}},... on JiraConfiguration{url,projects{closedStatus,issueType,name,project},user,apiKey},... on ResourceOwnerConfiguration{resourceOwnerDefault: default,orgDomain,orgDomainTag,tags},... on AccountOwnersConfiguration{accountOwnersDefault: default{account,owners},orgDomain,orgDomainTag,tags}}}}",
        "variables": {
          "name": "symphony",
          "scope": "0"
        }
      },
      "response": {
        "data": {
          "profile": {
            "id": "WyJjb25mIiwgIjAiLCAic3ltcGhvbnkiXQ==",
            "profile": "symphony",
            "record": {
              "__typename": "SymphonyConfiguration",
              "agentDomain": "example.symphony.com",
              "privateKey": "_encrypted:AQICAHh4ux78bAs/X3yYBg/TwgPXGB46MhYMn/VlwsH+BGTJoQEXFWC9nj3XzzXnfroeiF6mAAAArDCBqQYJKoZIhvcNAQcGoIGbMIGYAgEAMIGSBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDMfZLB8Kfj00N34XsQIBEIBlXxLAZc4bDpXk7ydVP/umFsXHRAPbTzsVkb1r28o7Om/rYWwBUPYEdh4XGuc1km705siLIoRqXztREPvXCjVQD88DYK7L6xpO3g6qjxU+tui94uiv3M37Z6AaK+Z6VIQBCxn2TLw=",
              "serviceAccount": "test-service-account"
            }
          }
        }
      }
    }
  ]
}