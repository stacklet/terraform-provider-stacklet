{
  "mutation ($input:AddAccountGroupInput!){addAccountGroup(input: $input){group{id,uuid,name,description,provider,regions}}}:{\"input\":{\"description\":\"Test account group for report group\",\"name\":\"test-rg-ag\",\"provider\":\"AWS\",\"regions\":[\"us-east-1\"]}}": [
    {
      "request": {
        "query": "mutation ($input:AddAccountGroupInput!){addAccountGroup(input: $input){group{id,uuid,name,description,provider,regions}}}",
        "variables": {
          "input": {
            "description": "Test account group for report group",
            "name": "test-rg-ag",
            "provider": "AWS",
            "regions": [
              "us-east-1"
            ]
          }
        }
      },
      "response": {
        "data": {
          "addAccountGroup": {
            "group": {
              "description": "Test account group for report group",
              "id": "WyJhY2NvdW50LWdyb3VwIiwgIjNiMmNiZTlmLTY0OTYtNGVkMC1iZjhjLWZjNWFhMGJhYTg3MSJd",
              "name": "test-rg-ag",
              "provider": "AWS",
              "regions": [
                "us-east-1"
              ],
              "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
            }
          }
        }
      }
    }
  ],
  "mutation ($input:AddBindingInput!){addBinding(input: $input){binding{id,uuid,name,description,autoDeploy,schedule,accountGroup{uuid},policyCollection{uuid},executionConfig{dryRun{default},resourceLimits{default{maxCount,maxPercentage,requiresBoth},policyOverrides{limit{maxCount,maxPercentage,requiresBoth},policyName}},securityContext{default},variables},system}}}:{\"input\":{\"accountGroupUUID\":\"3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871\",\"autoDeploy\":true,\"deploy\":true,\"description\":\"Test binding for report group\",\"executionConfig\":{\"dryRun\":null,\"resourceLimits\":{\"default\":null,\"policyOverrides\":[]},\"securityContext\":null,\"variables\":null},\"name\":\"test-rg-binding\",\"policyCollectionUUID\":\"eeb692a9-ff74-4531-92b5-198de4d1eee2\"}}": [
    {
      "request": {
        "query": "mutation ($input:AddBindingInput!){addBinding(input: $input){binding{id,uuid,name,description,autoDeploy,schedule,accountGroup{uuid},policyCollection{uuid},executionConfig{dryRun{default},resourceLimits{default{maxCount,maxPercentage,requiresBoth},policyOverrides{limit{maxCount,maxPercentage,requiresBoth},policyName}},securityContext{default},variables},system}}}",
        "variables": {
          "input": {
            "accountGroupUUID": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871",
            "autoDeploy": true,
            "deploy": true,
            "description": "Test binding for report group",
            "executionConfig": {
              "dryRun": null,
              "resourceLimits": {
                "default": null,
                "policyOverrides": []
              },
              "securityContext": null,
              "variables": null
            },
            "name": "test-rg-binding",
            "policyCollectionUUID": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
          }
        }
      },
      "response": {
        "data": {
          "addBinding": {
            "binding": {
              "accountGroup": {
                "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
              },
              "autoDeploy": true,
              "description": "Test binding for report group",
              "executionConfig": {
                "dryRun": null,
                "resourceLimits": null,
                "securityContext": null,
                "variables": null
              },
              "id": "WyJiaW5kaW5nIiwgIjdiYTk2NjI3LTU3YzgtNDNjNi05OGI2LWM1ZjdjMzU0ZjQyYiJd",
              "name": "test-rg-binding",
              "policyCollection": {
                "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
              },
              "schedule": null,
              "system": false,
              "uuid": "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            }
          }
        }
      }
    }
  ],
  "mutation ($input:AddPolicyCollectionInput!){addPolicyCollection(input: $input){collection{id,uuid,name,description,provider,autoUpdate,system,isDynamic,repositoryConfig{uuid},repositoryView{namespace,branchName,policyDirectories,policyFileSuffix}}}}:{\"input\":{\"autoUpdate\":false,\"description\":\"Test policy collection for report group\",\"name\":\"test-rg-pc\",\"provider\":\"AWS\"}}": [
    {
      "request": {
        "query": "mutation ($input:AddPolicyCollectionInput!){addPolicyCollection(input: $input){collection{id,uuid,name,description,provider,autoUpdate,system,isDynamic,repositoryConfig{uuid},repositoryView{namespace,branchName,policyDirectories,policyFileSuffix}}}}",
        "variables": {
          "input": {
            "autoUpdate": false,
            "description": "Test policy collection for report group",
            "name": "test-rg-pc",
            "provider": "AWS"
          }
        }
      },
      "response": {
        "data": {
          "addPolicyCollection": {
            "collection": {
              "autoUpdate": false,
              "description": "Test policy collection for report group",
              "id": "WyJwb2xpY3ktY29sbGVjdGlvbiIsICJlZWI2OTJhOS1mZjc0LTQ1MzEtOTJiNS0xOThkZTRkMWVlZTIiXQ==",
              "isDynamic": false,
              "name": "test-rg-pc",
              "provider": "AWS",
              "repositoryConfig": null,
              "repositoryView": null,
              "system": false,
              "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
            }
          }
        }
      }
    }
  ],
  "mutation ($input:UpsertReportGroupsInput!){upsertReportGroups(input: $input){reportGroups{id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}}:{\"input\":{\"reportGroups\":[{\"bindings\":[\"7ba96627-57c8-43c6-98b6-c5f7c354f42b\"],\"emailSettings\":[{\"cc\":[],\"firstMatchOnly\":false,\"format\":\"\",\"fromEmail\":null,\"priority\":\"3\",\"recipients\":[{\"account_owner\":null,\"event_owner\":null,\"resource_owner\":true,\"tag\":null,\"value\":null},{\"account_owner\":null,\"event_owner\":null,\"resource_owner\":null,\"tag\":null,\"value\":\"user@example.com\"}],\"subject\":\"Matched resources\",\"template\":\"email\"}],\"enabled\":true,\"groupBy\":[\"account\",\"region\"],\"jiraSettings\":null,\"msteamsSettings\":null,\"name\":\"test-report-group\",\"schedule\":\"0 12 * * *\",\"serviceNowSettings\":null,\"slackSettings\":null,\"source\":\"BINDING\",\"symphonySettings\":null,\"useMessageSettings\":true}]}}": [
    {
      "request": {
        "query": "mutation ($input:UpsertReportGroupsInput!){upsertReportGroups(input: $input){reportGroups{id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}}",
        "variables": {
          "input": {
            "reportGroups": [
              {
                "bindings": [
                  "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
                ],
                "emailSettings": [
                  {
                    "cc": [],
                    "firstMatchOnly": false,
                    "format": "",
                    "fromEmail": null,
                    "priority": "3",
                    "recipients": [
                      {
                        "account_owner": null,
                        "event_owner": null,
                        "resource_owner": true,
                        "tag": null,
                        "value": null
                      },
                      {
                        "account_owner": null,
                        "event_owner": null,
                        "resource_owner": null,
                        "tag": null,
                        "value": "user@example.com"
                      }
                    ],
                    "subject": "Matched resources",
                    "template": "email"
                  }
                ],
                "enabled": true,
                "groupBy": [
                  "account",
                  "region"
                ],
                "jiraSettings": null,
                "msteamsSettings": null,
                "name": "test-report-group",
                "schedule": "0 12 * * *",
                "serviceNowSettings": null,
                "slackSettings": null,
                "source": "BINDING",
                "symphonySettings": null,
                "useMessageSettings": true
              }
            ]
          }
        }
      },
      "response": {
        "data": {
          "upsertReportGroups": {
            "reportGroups": [
              {
                "bindings": [
                  "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
                ],
                "deliverySettings": [
                  {
                    "__typename": "EmailSettings",
                    "cc": [],
                    "firstMatchOnly": false,
                    "format": "",
                    "fromEmail": null,
                    "priority": "3",
                    "recipients": [
                      {
                        "account_owner": null,
                        "event_owner": null,
                        "resource_owner": true,
                        "tag": null,
                        "value": null
                      },
                      {
                        "account_owner": null,
                        "event_owner": null,
                        "resource_owner": null,
                        "tag": null,
                        "value": "user@example.com"
                      }
                    ],
                    "subject": "Matched resources",
                    "template": "email"
                  }
                ],
                "enabled": true,
                "groupBy": [
                  "account",
                  "region"
                ],
                "id": "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd",
                "name": "test-report-group",
                "schedule": "0 12 * * *",
                "source": "BINDING",
                "useMessageSettings": true
              }
            ]
          }
        }
      }
    }
  ],
  "mutation ($names:[String!]!){removeReportGroups(names: $names)}:{\"names\":[\"test-report-group\"]}": [
    {
      "request": {
        "query": "mutation ($names:[String!]!){removeReportGroups(names: $names)}",
        "variables": {
          "names": [
            "test-report-group"
          ]
        }
      },
      "response": {
        "data": {
          "removeReportGroups": [
            "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd"
          ]
        }
      }
    }
  ],
  "mutation ($uuid:String!){removeAccountGroup(uuid: $uuid){group{uuid}}}:{\"uuid\":\"3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871\"}": [
    {
      "request": {
        "query": "mutation ($uuid:String!){removeAccountGroup(uuid: $uuid){group{uuid}}}",
        "variables": {
          "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
        }
      },
      "response": {
        "data": {
          "removeAccountGroup": {
            "group": {
              "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
            }
          }
        }
      }
    }
  ],
  "mutation ($uuid:String!){removeBinding(uuid: $uuid){binding{uuid}}}:{\"uuid\":\"7ba96627-57c8-43c6-98b6-c5f7c354f42b\"}": [
    {
      "request": {
        "query": "mutation ($uuid:String!){removeBinding(uuid: $uuid){binding{uuid}}}",
        "variables": {
          "uuid": "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
        }
      },
      "response": {
        "data": {
          "removeBinding": {
            "binding": {
              "uuid": "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            }
          }
        }
      }
    }
  ],
  "mutation ($uuid:String!){removePolicyCollection(uuid: $uuid){collection{uuid}}}:{\"uuid\":\"eeb692a9-ff74-4531-92b5-198de4d1eee2\"}": [
    {
      "request": {
        "query": "mutation ($uuid:String!){removePolicyCollection(uuid: $uuid){collection{uuid}}}",
        "variables": {
          "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
        }
      },
      "response": {
        "data": {
          "removePolicyCollection": {
            "collection": {
              "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
            }
          }
        }
      }
    }
  ],
  "query ($name:String!$uuid:String!){accountGroup(uuid: $uuid, name: $name){id,uuid,name,description,provider,regions}}:{\"name\":\"\",\"uuid\":\"3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871\"}": [
    {
      "request": {
        "query": "query ($name:String!$uuid:String!){accountGroup(uuid: $uuid, name: $name){id,uuid,name,description,provider,regions}}",
        "variables": {
          "name": "",
          "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
        }
      },
      "response": {
        "data": {
          "accountGroup": {
            "description": "Test account group for report group",
            "id": "WyJhY2NvdW50LWdyb3VwIiwgIjNiMmNiZTlmLTY0OTYtNGVkMC1iZjhjLWZjNWFhMGJhYTg3MSJd",
            "name": "test-rg-ag",
            "provider": "AWS",
            "regions": [
              "us-east-1"
            ],
            "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
          }
        }
      }
    }
  ],
  "query ($name:String!$uuid:String!){binding(uuid: $uuid, name: $name){id,uuid,name,description,autoDeploy,schedule,accountGroup{uuid},policyCollection{uuid},executionConfig{dryRun{default},resourceLimits{default{maxCount,maxPercentage,requiresBoth},policyOverrides{limit{maxCount,maxPercentage,requiresBoth},policyName}},securityContext{default},variables},system}}:{\"name\":\"\",\"uuid\":\"7ba96627-57c8-43c6-98b6-c5f7c354f42b\"}": [
    {
      "request": {
        "query": "query ($name:String!$uuid:String!){binding(uuid: $uuid, name: $name){id,uuid,name,description,autoDeploy,schedule,accountGroup{uuid},policyCollection{uuid},executionConfig{dryRun{default},resourceLimits{default{maxCount,maxPercentage,requiresBoth},policyOverrides{limit{maxCount,maxPercentage,requiresBoth},policyName}},securityContext{default},variables},system}}",
        "variables": {
          "name": "",
          "uuid": "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
        }
      },
      "response": {
        "data": {
          "binding": {
            "accountGroup": {
              "uuid": "3b2cbe9f-6496-4ed0-bf8c-fc5aa0baa871"
            },
            "autoDeploy": true,
            "description": "Test binding for report group",
            "executionConfig": {
              "dryRun": null,
              "resourceLimits": null,
              "securityContext": null,
              "variables": null
            },
            "id": "WyJiaW5kaW5nIiwgIjdiYTk2NjI3LTU3YzgtNDNjNi05OGI2LWM1ZjdjMzU0ZjQyYiJd",
            "name": "test-rg-binding",
            "policyCollection": {
              "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
            },
            "schedule": null,
            "system": false,
            "uuid": "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
          }
        }
      }
    }
  ],
  "query ($name:String!$uuid:String!){policyCollection(uuid: $uuid, name: $name){id,uuid,name,description,provider,autoUpdate,system,isDynamic,repositoryConfig{uuid},repositoryView{namespace,branchName,policyDirectories,policyFileSuffix}}}:{\"name\":\"\",\"uuid\":\"eeb692a9-ff74-4531-92b5-198de4d1eee2\"}": [
    {
      "request": {
        "query": "query ($name:String!$uuid:String!){policyCollection(uuid: $uuid, name: $name){id,uuid,name,description,provider,autoUpdate,system,isDynamic,repositoryConfig{uuid},repositoryView{namespace,branchName,policyDirectories,policyFileSuffix}}}",
        "variables": {
          "name": "",
          "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
        }
      },
      "response": {
        "data": {
          "policyCollection": {
            "autoUpdate": false,
            "description": "Test policy collection for report group",
            "id": "WyJwb2xpY3ktY29sbGVjdGlvbiIsICJlZWI2OTJhOS1mZjc0LTQ1MzEtOTJiNS0xOThkZTRkMWVlZTIiXQ==",
            "isDynamic": false,
            "name": "test-rg-pc",
            "provider": "AWS",
            "repositoryConfig": null,
            "repositoryView": null,
            "system": false,
            "uuid": "eeb692a9-ff74-4531-92b5-198de4d1eee2"
          }
        }
      }
    }
  ],
  "query ($name:String!){reportGroup(name: $name){id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}:{\"name\":\"test-report-group\"}": [
    {
      "request": {
        "query": "query ($name:String!){reportGroup(name: $name){id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}",
        "variables": {
          "name": "test-report-group"
        }
      },
      "response": {
        "data": {
          "reportGroup": {
            "bindings": [
              "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            ],
            "deliverySettings": [
              {
                "__typename": "EmailSettings",
                "cc": [],
                "firstMatchOnly": false,
                "format": "",
                "fromEmail": null,
                "priority": "3",
                "recipients": [
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": true,
                    "tag": null,
                    "value": null
                  },
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": null,
                    "tag": null,
                    "value": "user@example.com"
                  }
                ],
                "subject": "Matched resources",
                "template": "email"
              }
            ],
            "enabled": true,
            "groupBy": [
              "account",
              "region"
            ],
            "id": "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd",
            "name": "test-report-group",
            "schedule": "0 12 * * *",
            "source": "BINDING",
            "useMessageSettings": true
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!){reportGroup(name: $name){id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}",
        "variables": {
          "name": "test-report-group"
        }
      },
      "response": {
        "data": {
          "reportGroup": {
            "bindings": [
              "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            ],
            "deliverySettings": [
              {
                "__typename": "EmailSettings",
                "cc": [],
                "firstMatchOnly": false,
                "format": "",
                "fromEmail": null,
                "priority": "3",
                "recipients": [
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": true,
                    "tag": null,
                    "value": null
                  },
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": null,
                    "tag": null,
                    "value": "user@example.com"
                  }
                ],
                "subject": "Matched resources",
                "template": "email"
              }
            ],
            "enabled": true,
            "groupBy": [
              "account",
              "region"
            ],
            "id": "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd",
            "name": "test-report-group",
            "schedule": "0 12 * * *",
            "source": "BINDING",
            "useMessageSettings": true
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!){reportGroup(name: $name){id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}",
        "variables": {
          "name": "test-report-group"
        }
      },
      "response": {
        "data": {
          "reportGroup": {
            "bindings": [
              "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            ],
            "deliverySettings": [
              {
                "__typename": "EmailSettings",
                "cc": [],
                "firstMatchOnly": false,
                "format": "",
                "fromEmail": null,
                "priority": "3",
                "recipients": [
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": true,
                    "tag": null,
                    "value": null
                  },
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": null,
                    "tag": null,
                    "value": "user@example.com"
                  }
                ],
                "subject": "Matched resources",
                "template": "email"
              }
            ],
            "enabled": true,
            "groupBy": [
              "account",
              "region"
            ],
            "id": "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd",
            "name": "test-report-group",
            "schedule": "0 12 * * *",
            "source": "BINDING",
            "useMessageSettings": true
          }
        }
      }
    },
    {
      "request": {
        "query": "query ($name:String!){reportGroup(name: $name){id,name,enabled,bindings,source,schedule,groupBy,useMessageSettings,deliverySettings{__typename,... on EmailSettings{cc,firstMatchOnly,format,fromEmail,priority,recipients{account_owner,event_owner,resource_owner,tag,value},subject,template},... on SlackSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on MSTeamsSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template},... on ServiceNowSettings{firstMatchOnly,impact,recipients{account_owner,event_owner,resource_owner,tag,value},shortDescription,template,urgency},... on JiraSettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template,description,project,summary},... on SymphonySettings{firstMatchOnly,recipients{account_owner,event_owner,resource_owner,tag,value},template}}}}",
        "variables": {
          "name": "test-report-group"
        }
      },
      "response": {
        "data": {
          "reportGroup": {
            "bindings": [
              "7ba96627-57c8-43c6-98b6-c5f7c354f42b"
            ],
            "deliverySettings": [
              {
                "__typename": "EmailSettings",
                "cc": [],
                "firstMatchOnly": false,
                "format": "",
                "fromEmail": null,
                "priority": "3",
                "recipients": [
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": true,
                    "tag": null,
                    "value": null
                  },
                  {
                    "account_owner": null,
                    "event_owner": null,
                    "resource_owner": null,
                    "tag": null,
                    "value": "user@example.com"
                  }
                ],
                "subject": "Matched resources",
                "template": "email"
              }
            ],
            "enabled": true,
            "groupBy": [
              "account",
              "region"
            ],
            "id": "WyJyZyIsICJ0ZXN0LXJlcG9ydC1ncm91cCJd",
            "name": "test-report-group",
            "schedule": "0 12 * * *",
            "source": "BINDING",
            "useMessageSettings": true
          }
        }
      }
    }
  ]
}